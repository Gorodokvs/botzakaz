import re
import telebot  # –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
import sqlite3  # –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite
import requests  # –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
from telebot import types  # –ò–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏
deliveryMethod = ''
paymentMethod = ''
salda_chat_id = 380781080
sibtrakt_chat_id = 424347833
kachkanar_chat_id = 6209470364
allowed_users = [380781080, 424347833]
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞
bot = telebot.TeleBot('7647629268:AAE2HacxBvRl3etkfcIT8gzMz6XSZ3WXsVU')



@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.id in allowed_users:
        conn = sqlite3.connect("zakaz2")
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS users (
                OrderNumber TEXT,
                CreationDate TEXT,
                OrderAmount INTEGER,
                DeliveryMethod TEXT,
                PaymentMethod TEXT,
                Recipient TEXT,
                RecipientPhone TEXT,
                Region TEXT,
                City TEXT,
                DeliveryAddress TEXT,
                Comment TEXT,
                Products TEXT
            );
        ''')
        conn.commit()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        bot.reply_to(message, "–ì–æ—Ç–æ–≤")  # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        print(message.chat.id)  # –í—ã–≤–æ–¥ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —á–∞—Ç–∞
        conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ. üö´")

@bot.message_handler(commands=['info'])
def info(message):
    conn = sqlite3.connect("zakaz2")
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM users")  # –í—ã–±–æ—Ä –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
    for row in cursor.fetchall():  # –í—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –≤ –∫–æ–Ω—Å–æ–ª—å
        print(row)
    conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: message.from_user.id in allowed_users)
def handle_order(message):
    global deliveryMethod
    global paymentMethod
    orders = message.text.split(',')


    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if len(orders) >= 12:
        conn = sqlite3.connect("zakaz2")
        cursor = conn.cursor()
        cursor.execute('''
            INSERT INTO users (OrderNumber, CreationDate, OrderAmount, DeliveryMethod, PaymentMethod, Recipient, RecipientPhone, Region, City, DeliveryAddress, Comment, Products) 
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?)
        ''', (
            orders[0],  # OrderNumber
            orders[1],  # CreationDate
            orders[2],  # OrderAmount
            orders[3],  # DeliveryMethod
            orders[4],  # PaymentMethod
            orders[5],  # Recipient
            orders[6],  # RecipientPhone
            orders[7],  # Region
            orders[8],  # City
            orders[9],  # DeliveryAddress
            orders[10],  # Comment
            orders[11]  # Products
        ))
        conn.commit()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

        if int(orders[3]) == 1:
            deliveryMethod = '–°–∞–º–æ–≤—ã–≤–æ–∑'
        elif int(orders[3]) == 2:
            deliveryMethod = '–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º'
        if int(orders[4]) == 3:
            paymentMethod = '–ù–∞–ª–∏—á–Ω—ã–µ'
        elif int(orders[4]) == 4:
            paymentMethod = '–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π'
        elif int(orders[4]) == 5:
            paymentMethod = '–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ —Å–∞–π—Ç'
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏–π –ø–æ–ª–µ–π
        formatted_message = (
            f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {orders[0]}\n"
            f"–î–∞—Ç–∞: {orders[1]}\n"
            f"–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {orders[2]}\n"
            f"–ú–µ—Ç–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏: {deliveryMethod}\n"
            f"–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: {paymentMethod}\n"
            f"–ò–º—è: {orders[5]}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {orders[6]}\n"
            f"–ì–æ—Ä–æ–¥: {orders[8]}\n"
            f"–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {orders[9]}\n"
            f"–ó–∞–∫–∞–∑:\n{orders[11]}\n"
            f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {orders[10]}\n"
        )

        otvet = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton("20–º–∏–Ω—É—Ç", callback_data='20')
        button2 = types.InlineKeyboardButton("30–º–∏–Ω—É—Ç", callback_data='30')
        button3 = types.InlineKeyboardButton("60–º–∏–Ω—É—Ç", callback_data='60')
        button4 = types.InlineKeyboardButton("90–º–∏–Ω—É—Ç", callback_data='90')
        otvet.add(button1, button2, button3, button4)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        if  int(orders[7]) == 109:
            bot.send_message(salda_chat_id, formatted_message, reply_markup=otvet)

        elif int(orders[7]) == 110:
            bot.send_message(sibtrakt_chat_id, formatted_message, reply_markup=otvet)
        elif int(orders[7]) == 112:
            bot.send_message(kachkanar_chat_id, formatted_message, reply_markup=otvet)
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(380781080, message.text)  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.data == "20":
            print()
            bot.send_message(call.message.chat.id, "–ö—Ä—É—Ç–æ!")  # –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏
        elif call.data == "30":
            bot.send_message(call.message.chat.id, "–≤—Å–µ –µ—â–µ –Ω–µ –ø–ª–æ—Ö–æ")  # –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –≤—Ç–æ—Ä–æ–π –∫–Ω–æ–ø–∫–∏
        elif call.data == "60":
            bot.send_message(call.message.chat.id, "–º–æ–∂–Ω–æ –∏ –ø–æ–±—ã—Å—Ç—Ä–µ–µ")  # –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ —Ç—Ä–µ—Ç—å–µ–π –∫–Ω–æ–ø–∫–∏
        elif call.data == "90":
            bot.send_message(call.message.chat.id, "–æ—á–µ–Ω—å –¥–æ–ª–≥–æ")  # –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ —á–µ—Ç–≤–µ—Ä—Ç–æ–π –∫–Ω–æ–ø–∫–∏

        bot.send_message(call.message.chat.id, f"–í–∞—à –≤—ã–±–æ—Ä: {call.data}\n–û—Ç–≤–µ—Ç: {call.message.text}")

        start_index = call.message.text.find("–¢–µ–ª–µ—Ñ–æ–Ω:")
        if start_index != -1:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å "–¢–µ–ª–µ—Ñ–æ–Ω:" –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏
            phone_info = call.message.text[start_index:][12:26]
            phone_info = phone_info.replace("(", "").replace(")", "").replace("+", "").replace("-", "").strip()
        else:
            phone_info = "–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω."


        messSMS = "–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ "+call.data+" –º–∏–Ω—É—Ç"

        r = requests.get('http://192.168.1.102/default/en_US/send.html?u=admin&p=admin&l=2&n=8'+phone_info+'&m='+messSMS)
        print(phone_info)
        print(messSMS)
        print(r)
        # –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      reply_markup=None)

    except Exception as e:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        print(repr(e))  # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ
bot.polling(none_stop=True)